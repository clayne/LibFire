#pragma once

#pragma warning(disable : 4244)

namespace ActorValueHelper
{
	auto ActorValueToString(const RE::ActorValue a_actorValue) -> RE::BSFixedString
	{
		switch (a_actorValue) {
			case RE::ActorValue::kNone:
				return "None"sv;
			case RE::ActorValue::kAggression:
				return "Aggression"sv;
			case RE::ActorValue::kConfidence:
				return "Confidence"sv;
			case RE::ActorValue::kEnergy:
				return "Energy"sv;
			case RE::ActorValue::kMorality:
				return "Morality"sv;
			case RE::ActorValue::kMood:
				return "Mood"sv;
			case RE::ActorValue::kAssistance:
				return "Assistance"sv;
			case RE::ActorValue::kOneHanded:
				return "OneHanded"sv;
			case RE::ActorValue::kTwoHanded:
				return "TwoHanded"sv;
			case RE::ActorValue::kArchery:
				return "Marksman"sv;
			case RE::ActorValue::kBlock:
				return "Block"sv;
			case RE::ActorValue::kSmithing:
				return "Smithing"sv;
			case RE::ActorValue::kHeavyArmor:
				return "HeavyArmor"sv;
			case RE::ActorValue::kLightArmor:
				return "LightArmor"sv;
			case RE::ActorValue::kPickpocket:
				return "Pickpocket"sv;
			case RE::ActorValue::kLockpicking:
				return "Lockpicking"sv;
			case RE::ActorValue::kSneak:
				return "Sneak"sv;
			case RE::ActorValue::kAlchemy:
				return "Alchemy"sv;
			case RE::ActorValue::kSpeech:
				return "Speechcraft"sv;
			case RE::ActorValue::kAlteration:
				return "Alteration"sv;
			case RE::ActorValue::kConjuration:
				return "Conjuration"sv;
			case RE::ActorValue::kDestruction:
				return "Destruction"sv;
			case RE::ActorValue::kIllusion:
				return "Illusion"sv;
			case RE::ActorValue::kRestoration:
				return "Restoration"sv;
			case RE::ActorValue::kEnchanting:
				return "Enchanting"sv;
			case RE::ActorValue::kHealth:
				return "Health"sv;
			case RE::ActorValue::kMagicka:
				return "Magicka"sv;
			case RE::ActorValue::kStamina:
				return "Stamina"sv;
			case RE::ActorValue::kHealRate:
				return "HealRate"sv;
			case RE::ActorValue::kMagickaRate:
				return "MagickaRate"sv;
			case RE::ActorValue::kStaminaRate:
				return "StaminaRate"sv;
			case RE::ActorValue::kSpeedMult:
				return "SpeedMult"sv;
			case RE::ActorValue::kInventoryWeight:
				return "InventoryWeight"sv;
			case RE::ActorValue::kCarryWeight:
				return "CarryWeight"sv;
			case RE::ActorValue::kCriticalChance:
				return "CriticalChance"sv;
			case RE::ActorValue::kMeleeDamage:
				return "MeleeDamage"sv;
			case RE::ActorValue::kUnarmedDamage:
				return "UnarmedDamage"sv;
			case RE::ActorValue::kMass:
				return "Mass"sv;
			case RE::ActorValue::kVoicePoints:
				return "VoicePoints"sv;
			case RE::ActorValue::kVoiceRate:
				return "VoiceRate"sv;
			case RE::ActorValue::kDamageResist:
				return "DamageResist"sv;
			case RE::ActorValue::kPoisonResist:
				return "PoisonResist"sv;
			case RE::ActorValue::kResistFire:
				return "ResistFire"sv;
			case RE::ActorValue::kResistShock:
				return "ResistShock"sv;
			case RE::ActorValue::kResistFrost:
				return "ResistFrost"sv;
			case RE::ActorValue::kResistMagic:
				return "ResistMagic"sv;
			case RE::ActorValue::kResistDisease:
				return "ResistDisease"sv;
			case RE::ActorValue::kPerceptionCondition:
				return "PerceptionCondition"sv;
			case RE::ActorValue::kEnduranceCondition:
				return "EnduranceCondition"sv;
			case RE::ActorValue::kLeftAttackCondition:
				return "LeftAttackCondition"sv;
			case RE::ActorValue::kRightAttackCondition:
				return "RightAttackCondition"sv;
			case RE::ActorValue::kLeftMobilityCondition:
				return "LeftMobilityCondition"sv;
			case RE::ActorValue::kRightMobilityCondition:
				return "RightMobilityCondition"sv;
			case RE::ActorValue::kBrainCondition:
				return "BrainCondition"sv;
			case RE::ActorValue::kParalysis:
				return "Paralysis"sv;
			case RE::ActorValue::kInvisibility:
				return "Invisibility"sv;
			case RE::ActorValue::kNightEye:
				return "NightEye"sv;
			case RE::ActorValue::kDetectLifeRange:
				return "DetectLifeRange"sv;
			case RE::ActorValue::kWaterBreathing:
				return "WaterBreathing"sv;
			case RE::ActorValue::kWaterWalking:
				return "WaterWalking"sv;
			case RE::ActorValue::kIgnoreCrippledLimbs:
				return "IgnoreCrippledLimbs"sv;
			case RE::ActorValue::kFame:
				return "Fame"sv;
			case RE::ActorValue::kInfamy:
				return "Infamy"sv;
			case RE::ActorValue::kJumpingBonus:
				return "JumpingBonus"sv;
			case RE::ActorValue::kWardPower:
				return "WardPower"sv;
			case RE::ActorValue::kRightItemCharge:
				return "RightItemCharge"sv;
			case RE::ActorValue::kArmorPerks:
				return "ArmorPerks"sv;
			case RE::ActorValue::kShieldPerks:
				return "ShieldPerks"sv;
			case RE::ActorValue::kWardDeflection:
				return "WardDeflection"sv;
			case RE::ActorValue::kVariable01:
				return "Variable01"sv;
			case RE::ActorValue::kVariable02:
				return "Variable02"sv;
			case RE::ActorValue::kVariable03:
				return "Variable03"sv;
			case RE::ActorValue::kVariable04:
				return "Variable04"sv;
			case RE::ActorValue::kVariable05:
				return "Variable05"sv;
			case RE::ActorValue::kVariable06:
				return "Variable06"sv;
			case RE::ActorValue::kVariable07:
				return "Variable07"sv;
			case RE::ActorValue::kVariable08:
				return "Variable08"sv;
			case RE::ActorValue::kVariable09:
				return "Variable09"sv;
			case RE::ActorValue::kVariable10:
				return "Variable10"sv;
			case RE::ActorValue::kBowSpeedBonus:
				return "BowSpeedBonus"sv;
			case RE::ActorValue::kFavorActive:
				return "FavorActive"sv;
			case RE::ActorValue::kFavorsPerDay:
				return "FavorsPerDay"sv;
			case RE::ActorValue::kFavorsPerDayTimer:
				return "FavorsPerDayTimer"sv;
			case RE::ActorValue::kLeftItemCharge:
				return "LeftItemCharge"sv;
			case RE::ActorValue::kAbsorbChance:
				return "AbsorbChance"sv;
			case RE::ActorValue::kBlindness:
				return "Blindness"sv;
			case RE::ActorValue::kWeaponSpeedMult:
				return "WeaponSpeedMult"sv;
			case RE::ActorValue::kShoutRecoveryMult:
				return "ShoutRecoveryMult"sv;
			case RE::ActorValue::kBowStaggerBonus:
				return "BowStaggerBonus"sv;
			case RE::ActorValue::kTelekinesis:
				return "Telekinesis"sv;
			case RE::ActorValue::kFavorPointsBonus:
				return "FavorPointsBonus"sv;
			case RE::ActorValue::kLastBribedIntimidated:
				return "LastBribedIntimidated"sv;
			case RE::ActorValue::kLastFlattered:
				return "LastFlattered"sv;
			case RE::ActorValue::kMovementNoiseMult:
				return "MovementNoiseMult"sv;
			case RE::ActorValue::kBypassVendorStolenCheck:
				return "BypassVendorStolenCheck"sv;
			case RE::ActorValue::kBypassVendorKeywordCheck:
				return "BypassVendorKeywordCheck"sv;
			case RE::ActorValue::kWaitingForPlayer:
				return "WaitingForPlayer"sv;
			case RE::ActorValue::kOneHandedModifier:
				return "OneHandedModifier"sv;
			case RE::ActorValue::kTwoHandedModifier:
				return "TwoHandedModifier"sv;
			case RE::ActorValue::kMarksmanModifier:
				return "MarksmanModifier"sv;
			case RE::ActorValue::kBlockModifier:
				return "BlockModifier"sv;
			case RE::ActorValue::kSmithingModifier:
				return "SmithingModifier"sv;
			case RE::ActorValue::kHeavyArmorModifier:
				return "HeavyArmorModifier"sv;
			case RE::ActorValue::kLightArmorModifier:
				return "LightArmorModifier"sv;
			case RE::ActorValue::kPickpocketModifier:
				return "PickpocketModifier"sv;
			case RE::ActorValue::kLockpickingModifier:
				return "LockpickingModifier"sv;
			case RE::ActorValue::kSneakingModifier:
				return "SneakingModifier"sv;
			case RE::ActorValue::kAlchemyModifier:
				return "AlchemyModifier"sv;
			case RE::ActorValue::kSpeechcraftModifier:
				return "SpeechcraftModifier"sv;
			case RE::ActorValue::kAlterationModifier:
				return "AlterationModifier"sv;
			case RE::ActorValue::kConjurationModifier:
				return "ConjurationModifier"sv;
			case RE::ActorValue::kDestructionModifier:
				return "DestructionModifier"sv;
			case RE::ActorValue::kIllusionModifier:
				return "IllusionModifier"sv;
			case RE::ActorValue::kRestorationModifier:
				return "RestorationModifier"sv;
			case RE::ActorValue::kEnchantingModifier:
				return "EnchantingModifier"sv;
			case RE::ActorValue::kOneHandedSkillAdvance:
				return "OneHandedSkillAdvance"sv;
			case RE::ActorValue::kTwoHandedSkillAdvance:
				return "TwoHandedSkillAdvance"sv;
			case RE::ActorValue::kMarksmanSkillAdvance:
				return "MarksmanSkillAdvance"sv;
			case RE::ActorValue::kBlockSkillAdvance:
				return "BlockSkillAdvance"sv;
			case RE::ActorValue::kSmithingSkillAdvance:
				return "SmithingSkillAdvance"sv;
			case RE::ActorValue::kHeavyArmorSkillAdvance:
				return "HeavyArmorSkillAdvance"sv;
			case RE::ActorValue::kLightArmorSkillAdvance:
				return "LightArmorSkillAdvance"sv;
			case RE::ActorValue::kPickpocketSkillAdvance:
				return "PickpocketSkillAdvance"sv;
			case RE::ActorValue::kLockpickingSkillAdvance:
				return "LockpickingSkillAdvance"sv;
			case RE::ActorValue::kSneakingSkillAdvance:
				return "SneakingSkillAdvance"sv;
			case RE::ActorValue::kAlchemySkillAdvance:
				return "AlchemySkillAdvance"sv;
			case RE::ActorValue::kSpeechcraftSkillAdvance:
				return "SpeechcraftSkillAdvance"sv;
			case RE::ActorValue::kAlterationSkillAdvance:
				return "AlterationSkillAdvance"sv;
			case RE::ActorValue::kConjurationSkillAdvance:
				return "ConjurationSkillAdvance"sv;
			case RE::ActorValue::kDestructionSkillAdvance:
				return "DestructionSkillAdvance"sv;
			case RE::ActorValue::kIllusionSkillAdvance:
				return "IllusionSkillAdvance"sv;
			case RE::ActorValue::kRestorationSkillAdvance:
				return "RestorationSkillAdvance"sv;
			case RE::ActorValue::kEnchantingSkillAdvance:
				return "EnchantingSkillAdvance"sv;
			case RE::ActorValue::kLeftWeaponSpeedMultiply:
				return "LeftWeaponSpeedMultiply"sv;
			case RE::ActorValue::kDragonSouls:
				return "DragonSouls"sv;
			case RE::ActorValue::kCombatHealthRegenMultiply:
				return "CombatHealthRegenMultiply"sv;
			case RE::ActorValue::kOneHandedPowerModifier:
				return "OneHandedPowerModifier"sv;
			case RE::ActorValue::kTwoHandedPowerModifier:
				return "TwoHandedPowerModifier"sv;
			case RE::ActorValue::kMarksmanPowerModifier:
				return "MarksmanPowerModifier"sv;
			case RE::ActorValue::kBlockPowerModifier:
				return "BlockPowerModifier"sv;
			case RE::ActorValue::kSmithingPowerModifier:
				return "SmithingPowerModifier"sv;
			case RE::ActorValue::kHeavyArmorPowerModifier:
				return "HeavyArmorPowerModifier"sv;
			case RE::ActorValue::kLightArmorPowerModifier:
				return "LightArmorPowerModifier"sv;
			case RE::ActorValue::kPickpocketPowerModifier:
				return "PickpocketPowerModifier"sv;
			case RE::ActorValue::kLockpickingPowerModifier:
				return "LockpickingPowerModifier"sv;
			case RE::ActorValue::kSneakingPowerModifier:
				return "SneakingPowerModifier"sv;
			case RE::ActorValue::kAlchemyPowerModifier:
				return "AlchemyPowerModifier"sv;
			case RE::ActorValue::kSpeechcraftPowerModifier:
				return "SpeechcraftPowerModifier"sv;
			case RE::ActorValue::kAlterationPowerModifier:
				return "AlterationPowerModifier"sv;
			case RE::ActorValue::kConjurationPowerModifier:
				return "ConjurationPowerModifier"sv;
			case RE::ActorValue::kDestructionPowerModifier:
				return "DestructionPowerModifier"sv;
			case RE::ActorValue::kIllusionPowerModifier:
				return "IllusionPowerModifier"sv;
			case RE::ActorValue::kRestorationPowerModifier:
				return "RestorationPowerModifier"sv;
			case RE::ActorValue::kEnchantingPowerModifier:
				return "EnchantingPowerModifier"sv;
			case RE::ActorValue::kDragonRend:
				return "DragonRend"sv;
			case RE::ActorValue::kAttackDamageMult:
				return "AttackDamageMult"sv;
			case RE::ActorValue::kHealRateMult:
				return "HealRateMult"sv;
			case RE::ActorValue::kMagickaRateMult:
				return "MagickaRateMult"sv;
			case RE::ActorValue::kStaminaRateMult:
				return "StaminaRateMult"sv;
			case RE::ActorValue::kWerewolfPerks:
				return "WerewolfPerks"sv;
			case RE::ActorValue::kVampirePerks:
				return "VampirePerks"sv;
			case RE::ActorValue::kGrabActorOffset:
				return "GrabActorOffset"sv;
			case RE::ActorValue::kGrabbed:
				return "Grabbed"sv;
			case RE::ActorValue::kDEPRECATED05:
				return "DEPRECATED05"sv;
			case RE::ActorValue::kReflectDamage:
				return "ReflectDamage"sv;
			default:
				return "None"sv;
		}
	}
}
